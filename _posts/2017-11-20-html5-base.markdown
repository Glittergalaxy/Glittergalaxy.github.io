---
layout: post
title:  "html5基础知识"
crawlertitle: "2017-11-16-html5-base-note"
summary: "html5基础知识"
date:   20171120
categories: posts
tags: 'css html5'
author: yunlei.ke
---
1. meta对象  
- content  'telephone=no','text/html;charset=gb2312','width=device-width;maximum-scale=1.0;user-scale=1.0;'
- name 'format-detection','viewport'
- httpEquiv 'charset','expires','set-cookie','Content-Type',
  
2. html5新属性
- video [controls,autoplay,width,height,loop,src,preload] ogg文件适用于firefox、opera、chrome,safari文件必须是peg4类型。
- audio [controls,autoplay,loop,src,preload]
- drag drop 任何元素都可以拖放  
```
<img ondragstart=drap(event) draggable="true" id="drag1"/>
<div ondrop="drop(event)" ondropover="allowDrop(event)" id="drop1"></div>

function drap(ev){
    ev.preventDefault();
    ev.dataTransfer.setData("Text",ev.target.id) 
}

function allowDrop(ev){
    ev.preventDefault();
}

function drop(ev){
    ev.preventDefault();
    var data = ev.dataTransfer.getData("Text");
    ev.target.appendChild(document.getElementById(data));
}

拖动开始：ondragstart,触发后设置被拖动数据类型和值
event.dataTransfer.setData("Text",ev.target.id);
拖动到某一位置：ondragover,默认元素不可拖动，此时需阻止默认处理方式  
event.preventDefault();  
拖动结束：ondrop,触发后获取到被拖动元素
var data = event.dataTransfer.getData("Text");
event.target.appendChild(document.getElementById(data));
```
- canvas [width,height]  - svg 
```
1. 获取到canvas，创建context对象
var c = document.getElementById("canvas");
var ctx = c.getContext("2d");
2. 绘制线条
ctx.moveTo(10,10);//移动到某一个点
ctx.lineTo(150,50);//线条画到某一点
ctx.stroke();//填充
3. 绘制圆形
ctx.fillStyle="#000";//填色
ctx.beginPath();//开始
ctx.arc(x,y,r,startAngle,endAngle,顺时针或逆时针);//画圆
ctx.closePath();//结束
ctx.fill();//填充
4. 渐变
var rect = ctx.createLinearGradient(0,0,175,50);//矩形区域
rect.addColorStop(0,"#fff");
rect.addColorStop(1,"#000");//渐变色
ctx.fillStyle = rect;//设置渐变色为填充颜色
ctx.fillRect(0,0,175,50);//画矩形  
5. 图像
var img = new Image();
img.src = "flower.png";//创建img对象并设置其属性
ctx.drawImage(img,0,0);//画出图像

canvas与svg比较
1.依赖分辨率、不依赖
2.不支持事件处理器、支持事件处理器
3.弱的文本渲染能力、最适合带有大型渲染程序的应用程序，比如谷歌地图
4.适合图像密集型游戏，其中的许多对象会被频繁重绘、不适合游戏应用
```
- Geolocation API 定位  
```
if(navigator.geolocation){
    navigator.geolocation.getCurrentPosition(showPosition,showError);
}

function showPosition(position){
    x.innerHTML = "latitude"+position.coords.latitude+"longtitude"+position.coords.longtitude;
    
}

function showError(error){
    switch(error.code){
        case error.PERMISSION_DENIED:
            return "user denied"
            break;
        case error.POSITION_UNAVAILABLE:
            return "location unavailable"
            break;
        case error.TIMEOUT:
            return "timeout"
            break;
        case error.UNKNOW_ERROR:
            return "unknow error"
            break;
    }
}
```
- localStorage sessionStorage 客户端存储数据
```
1. localStorage
无时间限制
2. sessionStorage
针对一个session的数据存储，当用户关闭浏览器窗口后数据被删除。
```  
- 应用缓存 application cache 除了IE不支持  
